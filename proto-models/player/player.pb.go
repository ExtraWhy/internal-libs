// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: player.proto

package playerproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id     *uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`         // Unique ID number for this person.
	Money  *uint64 `protobuf:"varint,3,opt,name=money" json:"money,omitempty"`   // Unique ID number for this person.
	Gameid *uint64 `protobuf:"varint,4,opt,name=gameid" json:"gameid,omitempty"` //game id to roll the random against
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Player) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Player) GetMoney() uint64 {
	if x != nil && x.Money != nil {
		return *x.Money
	}
	return 0
}

func (x *Player) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

type PlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id     *uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Gameid *uint64 `protobuf:"varint,3,opt,name=gameid" json:"gameid,omitempty"`
}

func (x *PlayerRequest) Reset() {
	*x = PlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRequest) ProtoMessage() {}

func (x *PlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRequest.ProtoReflect.Descriptor instead.
func (*PlayerRequest) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PlayerRequest) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PlayerRequest) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

type PlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id       *uint64 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Gameid   *uint64 `protobuf:"varint,3,opt,name=gameid" json:"gameid,omitempty"`
	MoneyWon *uint64 `protobuf:"varint,4,opt,name=money_won,json=moneyWon" json:"money_won,omitempty"`
	Lines    []byte  `protobuf:"bytes,5,opt,name=lines" json:"lines,omitempty"`
	Reels    []byte  `protobuf:"bytes,6,opt,name=reels" json:"reels,omitempty"`
}

func (x *PlayerResponse) Reset() {
	*x = PlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerResponse) ProtoMessage() {}

func (x *PlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerResponse.ProtoReflect.Descriptor instead.
func (*PlayerResponse) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PlayerResponse) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PlayerResponse) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *PlayerResponse) GetMoneyWon() uint64 {
	if x != nil && x.MoneyWon != nil {
		return *x.MoneyWon
	}
	return 0
}

func (x *PlayerResponse) GetLines() []byte {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *PlayerResponse) GetReels() []byte {
	if x != nil {
		return x.Reels
	}
	return nil
}

type Symbols struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sym []int32 `protobuf:"varint,1,rep,name=Sym" json:"Sym,omitempty"`
}

func (x *Symbols) Reset() {
	*x = Symbols{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Symbols) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symbols) ProtoMessage() {}

func (x *Symbols) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symbols.ProtoReflect.Descriptor instead.
func (*Symbols) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{3}
}

func (x *Symbols) GetSym() []int32 {
	if x != nil {
		return x.Sym
	}
	return nil
}

type CleopatraWins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wins []*CleopatraWin `protobuf:"bytes,1,rep,name=wins" json:"wins,omitempty"`
	Syms []*Symbols      `protobuf:"bytes,2,rep,name=Syms" json:"Syms,omitempty"`
}

func (x *CleopatraWins) Reset() {
	*x = CleopatraWins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleopatraWins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleopatraWins) ProtoMessage() {}

func (x *CleopatraWins) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleopatraWins.ProtoReflect.Descriptor instead.
func (*CleopatraWins) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{4}
}

func (x *CleopatraWins) GetWins() []*CleopatraWin {
	if x != nil {
		return x.Wins
	}
	return nil
}

func (x *CleopatraWins) GetSyms() []*Symbols {
	if x != nil {
		return x.Syms
	}
	return nil
}

type CleopatraWin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pay   *float32   `protobuf:"fixed32,1,opt,name=Pay" json:"Pay,omitempty"`
	Mult  *float32   `protobuf:"fixed32,2,opt,name=Mult" json:"Mult,omitempty"`
	Sym   *uint32    `protobuf:"varint,3,opt,name=Sym" json:"Sym,omitempty"`
	Num   []uint32   `protobuf:"varint,4,rep,name=Num" json:"Num,omitempty"`
	Line  *uint32    `protobuf:"varint,5,opt,name=Line" json:"Line,omitempty"`
	Linex []uint32   `protobuf:"varint,6,rep,name=Linex" json:"Linex,omitempty"`
	Free  *uint32    `protobuf:"varint,7,opt,name=Free" json:"Free,omitempty"`
	BID   *uint32    `protobuf:"varint,8,opt,name=BID" json:"BID,omitempty"`
	Bon   *anypb.Any `protobuf:"bytes,9,opt,name=Bon" json:"Bon,omitempty"`
	JID   *uint32    `protobuf:"varint,10,opt,name=JID" json:"JID,omitempty"`
	Jack  *float32   `protobuf:"fixed32,11,opt,name=Jack" json:"Jack,omitempty"`
}

func (x *CleopatraWin) Reset() {
	*x = CleopatraWin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleopatraWin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleopatraWin) ProtoMessage() {}

func (x *CleopatraWin) ProtoReflect() protoreflect.Message {
	mi := &file_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleopatraWin.ProtoReflect.Descriptor instead.
func (*CleopatraWin) Descriptor() ([]byte, []int) {
	return file_player_proto_rawDescGZIP(), []int{5}
}

func (x *CleopatraWin) GetPay() float32 {
	if x != nil && x.Pay != nil {
		return *x.Pay
	}
	return 0
}

func (x *CleopatraWin) GetMult() float32 {
	if x != nil && x.Mult != nil {
		return *x.Mult
	}
	return 0
}

func (x *CleopatraWin) GetSym() uint32 {
	if x != nil && x.Sym != nil {
		return *x.Sym
	}
	return 0
}

func (x *CleopatraWin) GetNum() []uint32 {
	if x != nil {
		return x.Num
	}
	return nil
}

func (x *CleopatraWin) GetLine() uint32 {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return 0
}

func (x *CleopatraWin) GetLinex() []uint32 {
	if x != nil {
		return x.Linex
	}
	return nil
}

func (x *CleopatraWin) GetFree() uint32 {
	if x != nil && x.Free != nil {
		return *x.Free
	}
	return 0
}

func (x *CleopatraWin) GetBID() uint32 {
	if x != nil && x.BID != nil {
		return *x.BID
	}
	return 0
}

func (x *CleopatraWin) GetBon() *anypb.Any {
	if x != nil {
		return x.Bon
	}
	return nil
}

func (x *CleopatraWin) GetJID() uint32 {
	if x != nil && x.JID != nil {
		return *x.JID
	}
	return 0
}

func (x *CleopatraWin) GetJack() float32 {
	if x != nil && x.Jack != nil {
		return *x.Jack
	}
	return 0
}

var File_player_proto protoreflect.FileDescriptor

var file_player_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x69, 0x64, 0x22, 0x4b, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x22,
	0x95, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x77, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x57, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x72, 0x65, 0x65, 0x6c, 0x73, 0x22, 0x1b, 0x0a, 0x07, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x79, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x03, 0x53, 0x79, 0x6d, 0x22, 0x68, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x6f, 0x70, 0x61, 0x74, 0x72,
	0x61, 0x57, 0x69, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x65, 0x6f, 0x70, 0x61, 0x74, 0x72, 0x61, 0x57, 0x69, 0x6e, 0x52, 0x04,
	0x77, 0x69, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x53, 0x79, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x04, 0x53, 0x79, 0x6d, 0x73, 0x22, 0xf6,
	0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x6f, 0x70, 0x61, 0x74, 0x72, 0x61, 0x57, 0x69, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x50, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x50, 0x61,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x4d, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x79, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x53, 0x79, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6e, 0x65, 0x78, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69,
	0x6e, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x46, 0x72, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x49, 0x44, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x42, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x03, 0x42, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x42, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4a, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x4a, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4a, 0x61, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x4a, 0x61, 0x63, 0x6b, 0x32, 0xae, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x65, 0x6f, 0x70, 0x61, 0x74, 0x72, 0x61, 0x12, 0x1a,
	0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x65, 0x6f, 0x70, 0x61, 0x74,
	0x72, 0x61, 0x57, 0x69, 0x6e, 0x73, 0x22, 0x00,
}

var (
	file_player_proto_rawDescOnce sync.Once
	file_player_proto_rawDescData = file_player_proto_rawDesc
)

func file_player_proto_rawDescGZIP() []byte {
	file_player_proto_rawDescOnce.Do(func() {
		file_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_player_proto_rawDescData)
	})
	return file_player_proto_rawDescData
}

var file_player_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_player_proto_goTypes = []interface{}{
	(*Player)(nil),         // 0: playerproto.Player
	(*PlayerRequest)(nil),  // 1: playerproto.PlayerRequest
	(*PlayerResponse)(nil), // 2: playerproto.PlayerResponse
	(*Symbols)(nil),        // 3: playerproto.Symbols
	(*CleopatraWins)(nil),  // 4: playerproto.CleopatraWins
	(*CleopatraWin)(nil),   // 5: playerproto.CleopatraWin
	(*anypb.Any)(nil),      // 6: google.protobuf.Any
}
var file_player_proto_depIdxs = []int32{
	5, // 0: playerproto.CleopatraWins.wins:type_name -> playerproto.CleopatraWin
	3, // 1: playerproto.CleopatraWins.Syms:type_name -> playerproto.Symbols
	6, // 2: playerproto.CleopatraWin.Bon:type_name -> google.protobuf.Any
	1, // 3: playerproto.ServiceGameWon.GetWinForPlayer:input_type -> playerproto.PlayerRequest
	1, // 4: playerproto.ServiceGameWon.GetWinForCleopatra:input_type -> playerproto.PlayerRequest
	2, // 5: playerproto.ServiceGameWon.GetWinForPlayer:output_type -> playerproto.PlayerResponse
	4, // 6: playerproto.ServiceGameWon.GetWinForCleopatra:output_type -> playerproto.CleopatraWins
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_player_proto_init() }
func file_player_proto_init() {
	if File_player_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Symbols); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleopatraWins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_player_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleopatraWin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_player_proto_goTypes,
		DependencyIndexes: file_player_proto_depIdxs,
		MessageInfos:      file_player_proto_msgTypes,
	}.Build()
	File_player_proto = out.File
	file_player_proto_rawDesc = nil
	file_player_proto_goTypes = nil
	file_player_proto_depIdxs = nil
}
