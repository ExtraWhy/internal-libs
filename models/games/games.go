package games

type Win struct {
	Top            byte
	Mid            byte
	Bottom         byte
	DLow           byte
	DHigh          byte
	ZigRight       byte
	ZizLeft        byte
	ZigDoubleLeft  byte
	ZigDoubleRight byte
	ZigLongLeft    byte
}

type Game struct {
	Reels [][]uint16
	Lines [][]uint16
}

var (
	//99% rtp ORIGINAL RESTORE
	Game1 = Game{Reels: [][]uint16{
		{11, 5, 10, 2, 7, 5, 9, 1, 7, 3, 8, 4, 11, 12, 6, 10, 3, 8, 2, 11, 3, 8, 5, 12, 6, 9, 12, 4, 10, 13, 2, 7, 6, 9},
		{11, 12, 3, 9, 8, 4, 9, 5, 7, 2, 9, 6, 7, 2, 8, 5, 11, 6, 8, 10, 3, 12, 2, 10, 11, 1, 10, 4, 13, 6, 7, 5, 12, 3},
		{8, 5, 11, 3, 12, 6, 9, 7, 3, 10, 4, 8, 13, 2, 7, 4, 11, 2, 9, 5, 12, 3, 10, 9, 2, 12, 1, 7, 5, 8, 6, 11, 10, 6},
		{3, 10, 5, 11, 6, 7, 11, 6, 7, 2, 13, 3, 9, 2, 10, 1, 12, 11, 3, 12, 4, 9, 8, 5, 10, 2, 8, 5, 7, 12, 4, 8, 6, 9},
		{6, 7, 10, 9, 1, 12, 6, 11, 2, 9, 3, 8, 2, 7, 5, 10, 7, 4, 8, 3, 12, 13, 6, 11, 5, 8, 2, 10, 5, 12, 4, 9, 3, 11},
	},
		Lines: [][]uint16{
			{1, 1, 1, 1, 1}, // 1
			{0, 0, 0, 0, 0}, // 2
			{2, 2, 2, 2, 2}, // 3
			{0, 1, 2, 1, 0}, // 4
			{2, 1, 0, 1, 2}, // 5
			{0, 0, 1, 2, 2}, // 6
			{2, 2, 1, 0, 0}, // 7
			{1, 0, 1, 2, 1}, // 8
			{1, 2, 1, 0, 1}, // 9
			{0, 1, 1, 1, 2}, // 10
		},
	}

	//MOCKUP - TESTS high hit ration
	GameTest = Game{Reels: [][]uint16{
		{1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 1, 1, 2, 10, 10, 2, 3, 10, 2, 3, 2, 10, 10, 10, 1, 1, 2, 2, 10, 10, 10},
		{1, 1, 1, 1, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 2, 10, 10, 2, 3, 10, 2, 3, 2, 10, 10, 10, 1, 1, 2, 2, 10, 10, 10},
		{1, 1, 1, 1, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 10, 10, 2, 3, 10, 2, 3, 2, 10, 10, 10, 1, 1, 2, 2, 10, 10, 10},
		{1, 1, 1, 1, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 1, 2, 10, 10, 2, 3, 10, 2, 3, 2, 10, 10, 10, 1, 1, 2, 2, 10, 10, 10},
		{1, 1, 1, 1, 5, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 1, 1, 2, 10, 10, 2, 3, 10, 2, 3, 2, 10, 10, 10, 1, 1, 2, 2, 10, 10, 10},
	},
		Lines: [][]uint16{
			{1, 1, 1, 1, 1}, // 1
			{0, 0, 0, 0, 0}, // 2
			{2, 2, 2, 2, 2}, // 3
			{0, 1, 2, 1, 0}, // 4
			{2, 1, 0, 1, 2}, // 5
			{0, 0, 1, 2, 2}, // 6
			{2, 2, 1, 0, 0}, // 7
			{1, 0, 1, 2, 1}, // 8
			{1, 2, 1, 0, 1}, // 9
			{0, 1, 1, 1, 2}, // 10
		},
	}
)
